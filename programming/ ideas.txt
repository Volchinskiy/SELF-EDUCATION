[
  { 
    idea: 'Правильная работа массивами.', 
    description: 'Если мы можем узнать какой в финале будет масив лучше его создать с помошью new Array(number) и присваевать в каждую ячейку вичисляемое значение, чем использовать .push() .pop() .shift() .unshift()', },
  { 
    idea: 'Правильное найменование идентификаторов.', 
    description: 'Любые идентификаторы нужно называть так чтобы другие люди могли понять что в них храниться и ты сам мог бы понять что в них храниться даже спустя большое количество времени.', },
  { 
    idea: 'Работа с инпутами.', 
    description: 'Инпутам всегда нужно указывать тип(tel, email, number, file...) чтобы улучшать одобство пользования страници.', },
  { 
    idea: 'Нужно понять что такое оперативная память компьютера. Про нее часто говорят.', 
    description: '', },
  { 
    idea: 'Правильная итерация по масиву обычным циклом for() с некоторыми условиями.', 
    description: 'Если нам нужно итерироватсь по масиву и мы хотим использовать обычный цикл for() и мы не будем менять длинну масива во время итерации то лучше запоминать длунну масива в переменную и прописать условия относительно наших переменных индекса и переменной длинный масива. Потому что array.length берет актуальную длинну масива на каждой итерации цикла. И идея в том чтобы не вычислять лишний раз длинну масива если она не будет меняться. 
      Пример: 
        for (let i = 0, ii = array.length; i < ii; i++) {
          // do something
        }
        Вот в этом цикле мы провели некоторую оптимизацию и перестали вычислять длинну масива на каждой итерации цикла. 
        И определенно есть минус у этого подхода и он заключаеться в том что это не такой читабельный вариант но каждому свое.
    ',},
  { 
    idea: 'Мойн новый подход к работе с большим реакт компонентом.', 
    description: 'Когда у нас есть большой реакт компонент, например это страничка в приложении то она со временем становиться огромной. в ней появляеться очень много методом, какихто идентификаторов, множество какогото кода который относиться к этот страници влияет на ее работу но его хочеться кудато спрятать. По этому я предлагаю создать отдельный файлик в папке этого компонента где будут лежать все эти вещи и импортироваться в компонент, НО в комопненте будут оставаться методы и тому подобное. Тоесть получиться такая ситуация что "все что мы используем" лежит в адной куче а "все что работает" в другой (в компоненте).', 
  },
  { 
    idea: '', 
    description: '', 
  },
]

