Not Tracked [ 
  { question: 'Какие есть типы списков в HTML?', answer: 'В HTML есть три типа списков маркерованный, нумерованный, список определений. Маркерованный список прописываеться с помошью тегов <ol> и <li>. Нумерованный прописываеться с помошью <ul> и <li>. Список определений приписываеться тегами <dl> - контейнер, <dt> - оперделение, <dd> - поясняющий текст.' },
  { question: 'Как семантически правильно сверстать картинку с подписью?', answer: 'С помошью тегов <figure> <img> и <figcaption>.' },
  { question: 'Какая разница между margin и padding?', answer: 'margin это отступ от border до соседних елементов, а padding от border до контента.' },
  { question: 'Какая разница между display: none; и visibility: hidden; ?', answer: 'Разница в том что display: none; вырезает елемент из документа и доступ в нему можно получить только из DOM также елемент никак не парситься поисковиками, а visibility: hidden; просто скривает елемент со страници, он влияет на расположение соседних елементов но его не видно и нельзя нажать.' },
  { question: 'Какая разница между блочными и строчными элементами?', answer: 'Разница в том что блочние элементы будут занимать всю доступную ширену, а строчные подстраиваются под контент по этому строчные всегда идут друг за другом. Также блочными элементам можно указывать высоту и ширену и margin по всем 4 сторонам, а строчным нельзя указывать вистоу и ширену и margin можно добавлять только справа и слева.' },
  { question: 'Какая разница между Адаптивным(adaptive) и отзывчивым(responsive) дизайном?', answer: 'Разница в том что адаптивный дизайн это несколько вариантов сайта которые подгружаються под конкретную ширену устройства, а отзывчивый это когда сайт сам подстраиваеться под ширену устройства.' },
  { question: 'Какая разница между let, const и var?', answer: 'Переменные обьвленные с помошью var всплывают, let это переменная ее можно переопределить, const это константа которую нельзя переопределять. Также у let, const блочная область видимости а у var функциональная или глобальная область вдимости.' },
  { question: 'Что такое функции высшего порядка(higher order function)?', answer: 'Функции высшего порядка это функции которые принимают в себя функии или возвращают функции.' },
  { question: 'Что такое DOM?', answer: 'DOM или document object model обьектная модель документа, наш HTML документ выраженый в обьектах которими с помошью js можно манипулировать.' },
  { question: 'Что такое распространение события(event propagation)?', answer: 'Это миханизм который отрабатывает когда какое либо событие происходит в документе событие распрастраняеться от обьекта window до вызывающего его элементе при этом событие затрагивает всех предков. Есть три фазы распространения события погружение(capture), таргет(target), всплытие(bubbling), при всплытие событие вызывает остальные подобные обработчики.' },
  { question: 'Что такое делегирование событий(event delegation)?', answer: 'Это когда мы вешаем не множество одинаковых обработчиков на множество элементов, а один обработчик на родительский елемент.' },
  { question: 'Что такое валидация? Типы проверок HTML документа?', answer: 'Валидация это процес проверки HTML документа с помошью специальных программ валидаторов на соответсвие веб сандартам и обнаружении ошибок. Основные проверки это: 1) Проверка на вложенность. 2) Проверка синтаксиса. 3) Проверка DTD. 4) Проверка на наличие лишних или неизвестных елементов.' },
  { question: 'Какой тег использовать для того чообы сверстать кнопку?', answer: 'Чтобы сверстать кнопку можно использовать следующие теги <input type=`button`> <button type=`submit`> <input type=`submit` value=`button`> <button> <a>' },
  { question: 'Что такое инлайновые стили? Можно ли их переопределить?', answer: 'Инлайновые стили это стили которые прописываются в самом HTML. Да их можно переопределить с помошью дерективы !important' },
  { question: 'Есть ли у HTML елементов свои дефолтные стили?', answer: 'Да практически у каждого елемента есть свои стили.' },
  { question: 'Для какого тега используеться атрибут alt и зачем он нужен?', answer: 'alt используеться для тега img он выводит указанный текс если картинка не загрузилась.' },
  { question: 'Что такое селектор? И какие селекторы существуют?', answer: 'Селектор это идентификатор с помошью которого мы можем стилизовать какойто конкретный елемент, или группу елементов к которомы применен селетор. Селесторы есть простые и комплексные, простые это: *, селектор по тегу, селектор класса, id селектор. А комплексные селекторы это селекторы которые состоят из простых.' },
  { question: 'Что такое спецефичность селестора? Как считать вес селестора?', answer: 'Спецефичность или вес селестора это свйоство селектора которое помогает браузеру понять какие стили применить к елементу если к нему применен не один селектор. Веса селекторов * 0, селестор тега 1, селестор класса 10, селестор id 100, инлайновый селектор 1000.' },
  { question: 'Какая разница между Normalize.css и Reset.css?', answer: 'Normalize.css приводит дефолтное отображение всех елементов на странице примерно к одному виду а Reset.css полностью обнуляет дефолтные стили елементов.' },
  { question: 'Какая pазница между null и undefined?', answer: 'Это оба нулевые значения но undefined означает что чтото пока еще не определенно, а null явно присваиваеться и означает что значение отсутсвует.' },
  { question: 'Что такое Hoisting?', answer: 'Это процес поднятия переменных и функций в глобальную или функциональную область видимости еще на этапе интерпретирования.' },
  { question: 'Раскажити как ведуть себя операторы && и || .', answer: 'Оператор && ищет первое false ели не находит его то возвращает последнее true значение. Оператор || ищет первое true если не находит то возвращает последнее false значение.' },
  { question: 'Какие есть таймеры в JS? Раскажите про них.', answer: 'В JS есть два типа таймера setTimeout и setInterval. setTimeout вызывает функцию после какогото промежутка времени один раз, а setInterval вызывает функцию через какойто промежуток времени пока его не остановить.' },
  { question: 'Что такое область видимости(scope)?', answer: '' },
  { question: 'Что такое use strict в Js и на что он влияет?', answer: '' },
  { question: 'Почему пришел в разработку?', answer: '' },
  { question: 'Что нравиться в разработке?', answer: '' },
  { question: 'Какое самую сложную задачу ты выполнял?', answer: '' },
]
secondRepeat: { [1], "06.08.2022", }
firstRepeat: { [2], "06.08.2022", }
learn: { [3], "06.08.2022", }
secondRepeat: { [2], "07.08.2022", }
firstRepeat: { [3], "07.08.2022", }
learn: { [4], "10.08.2022", }
  { question: 'Что такое HTML? Для чего он используеться?', answer: 'HTML или HyperText Markup Language, язык разметки гипертекста которий используют для определения структуры html страници. Структура страници задаеться с помошью тегов и их атрибутов. Основная задача HTML обьяснить браузеру как отобразить информацию и какого типа эта информация.' },
  { question: 'Перечислите типы input элементов.', answer: 'Их всего 23, и я не помню всех но могу назвать основные я это: password number text email file radio range checkbox и большое каличество разных инпутов для работы с датой и временем.' },
  { question: 'Что такое элемент canvas? И для чего его используют?', answer: 'canvas переводиться как холст и этот элемент используеться для отрисовки графики с помошью JS, можно рисовать геометрические фигуры, градиенты и тому подобное.' },
  { question: 'Что такое CSS правило?', answer: 'Это синтаксис в котором есть селектор к которому присваиваються стили, стили присваиваються в манере свойство и значение этого свойство. Пример div { width: 100px; }' },
  { question: 'Какая разница между классом и индикатором(id) в CSS?', answer: 'Вес id как селектора больше чем вес класса. Id должет быть 1 на странице и его лучше использовать для того чтобы обращаться к нему из JS, а класс лучше использовать для стилизации и его можно присваивать большому количеству элементов.' },
  { question: 'Что такое CSS спрайт и для чего он используеться?', answer: 'CSS-спрайт – способ объединить много изображений в одно, чтобы: Сократить количество обращений к серверу. Загрузить несколько изображений сразу, включая те, которые понадобятся в будущем.' },
  { question: 'Как превратить любой тип дпнных в булевый? Перечислите ложные значения в JS', answer: 'Чтобы превратить данные в булевый тип можно использовать Boolean() или !!. В JS ложные значения это false, NaN, ``, 0, null, undefined.},
  { question: 'Какие есть методы строк в Js?', answer: 'Когда я узнавал их было 27, всех я на изусть не знаю но могу назвать основние которыми пользовался: .charAt(), .endsWith(), startsWith(), .toUpperCase(), .toLowerCase(), length, .includes(), .replace(), .slice(), .split(), .trim(), .match(), .indexOf(), .lastIndexOf().' },
  { question: 'Какие есть методы массивов в Js?', answer: 'У масивов есть большое количество методов как у екземпляров класса так и у самого класса, я постараюсь перечислить основные которые активно использовал: .map(), .pop(), .push(), .shif(), .unshift(), .join(), .forEach(), .isArray(), .concat(), .at(), .fill(), .find(), .sort(), .filter(), .includes(), .slice(), .splice(), .reduce().' },
  { question: 'Какая разница между e.preventDefault() и e.stopPropagation()?', answer: 'e.preventDefault() отменяет дефолтное поведение елемента например если слеоать ссылку и применить этот метод к событию клик то ссылка не будет нас перенаправлять на другую страницу, а e.stopPropagation() отменяет всплытие события.' },
  { question: 'Какие есть методы поиска элементов в DOM?', answer: 'В браузерном JS есть 6 основных методов для поиска элементов .getElementById(), .getElementsByName(), .getElementsByTagName(), .getElementsByClassName(), .querySelector(), .querySelectorAll().' },
secondRepeat: { [3], "10.08.2022", }
firstRepeat: { [4], "13.08.2022", }
learn: { [5],
  "13.08.2022" : [
    { question: 'Для чего используют data-атрибуты?', answer: 'Для создания своих собственных атрибутов которые хранят какие-то значение которое можно использовать в дальнейшей логике.', }, 
    { question: 'Какая разница между <sccript>, <script async>, <script defer>?', answer: 'Когда происходит парсинг HTML документа и парсер натикаеться на тег <script> парсер блокирует свое виполенние до того момента пока <script> до конца не выполниться. Если <script> содержить атрибут async то парсинг и выполнение скрипта выполняеться паралельно. Если <script> имеет атрибут defer то выполнение скрипта начнеться только когда закончиться парсинг HTML.', }, 
    { question: 'Для чего используеться элемент datalist?', answer: 'datalist это по ситу инпут смешаный с селектом в который еще добавили автозаполнение полей. Он используеться для коммуникации с пользователем.', }, 
    { question: 'Где можно посмотреть ифнормацию о том как то или оное свойство поддерживаеться браузером?', answer: 'На ресурсе https://caniuse.com/', }, 
    { question: 'Что такое вендорные префексы? Для чего они используються?', answer: 'Вендорный префикс это приставка к CSS свойству которая обеспечивает поддержку данного свойства браузерами в которых оно не внедрено на постоянной основе.', }, 
    { question: 'Какая разница между Progressive Enhancement и Graceful Degradation?', answer: 'Это разные подходы к разарботке кросс платформенных и кросс браузерных приложений. Progressive Enhancement подразумивает собой `от легкого к сложному` тоесть у нас дизайн со временем усложняеться например мы сначало разработали дизайн к мобилке а потом девели его к екранам телефизора. Graceful Degradation подразумевает собой `от сложного к простому` например мы сначало разработали под под екраны телефозоров а потом дергадировали(упростили) делайн под телефоны.', }, 
    { question: 'Что таоке псевдоелементы и для чего они используються?', answer: 'Псевдо елемент это ключевое слово которое добавляеться на селектор и позволяеть стилизовать определенную часть выбранного элемента. Их вообще не много :befor, :after, :first-letter, :first-line, :selection.', }, 
    { question: 'Что такое чистая фкнкция?', answer: 'Это концепция из функционального программирования она должна удовлетворять двум условиям. 1) в ней не должно быть побочных эффектов. 2) Каждый раз она возвращает одинаковый результат если вызываеться с тем же набором аргументов.', }, 
    { question: 'Какая разница между .forEach() и .map()?', answer: '.forEach() это метод массива который итерируеться по масиву и применяеть переденную функцию к каждому елементу массива но не возвращает никакого результата. .map() тоже итерируеться по масиву и применяет переданную функцию к каждому елементу и возвращает новый масив выполнения этой функции.', }, 
    { question: 'Что обозначает this в Js?', answer: 'this в Js это ссылка на текущий обьектный контекст.', }, 
  ],
  "14.08.2022": [
    { question: 'Какая разница между .call(), .apply(), .bind()?', answer: '.bind() - возвращяет новую функцию в привязкой к обьктному контексту которую потом можно будет вызвать. .call() - разово вызывает функцию с привязкой к кокому-то обьектному контексту и также ожидает накоторые аргументы. .apply() - делает тоже самое что и .call() но ожидает аргументы в виде миссива.', }, 
    { question: 'Почему в Js функции называют обьектами первого класса?', answer: 'Потому что функция в Js это обьект и она наследуеться от класса Object и имеет все присущие методы обьекта.', }, 
  ]
secondRepeat: { [4], "14.08.2022", }
firstRepeat: { [5], "15.08.2022", }
learn: { [6],
  "16.08.2022" : [
    { question: 'Что такое схлопывание границ (margin collapsing)?', answer: 'Это механизм работы внешних вертикальных отступов. При котором отступ не сумируеться, а берется максимальное значение. К примеру у нас есть два блока верхний имеет margin 50px, нижний 60px итоговый отступ будет не 110px, а 60px.', },
    { question: 'Что такое кроссбраузерность?', answer: 'Это свойство приложения которое подразумевает собой что оно одинаково отображаеться и работает во всех браузерах.', },
    { question: 'Что такое CSS препроцессор?', answer: 'Эта программа которая позволяеть гененрировать CSS из собственного синтаксиса которые обычно легче расширять, а также препроцесоры доделывают шаблонную работу по типу добавления вендорных префиксов.', },
    { question: 'Как определить наличие свойства в объекте?', answer: 'Оператором in, методом .hasOwnProperty(), и [].', },
    { question: 'Что такое замыкание (Closure)?', answer: 'Это когда функция замкнула каое-то значение и использует его в дальнейшей логике.', },
    { question: 'Что такое IIFE?', answer: 'Это анонимная функция которая сразуже отрабатывает после создания, они были нужны когда в Js не было модулей.', },
    { question: 'Что такое псевдомассив arguments?', answer: 'Это коллекция аргументов функции которая доступна в каждой функции(кроеме стрелочных). К нему нельзя применять методы масива потому что это масиво подобный обьект но его можно превратить в обычный масив.', },
    { question: 'Разница между host-объектами и нативными объектами?', answer: 'host обьекты это обьекты которые предаставляються средой выполнения Js, а нативные обьекты это обьекты есть в самом Js.', },
    
    { question: 'Разница между event.target и event.currentTarget?', answer: 'Разница в том что currentTarget это элемент к которому прикреплено обработчик события, а target это элемент который вызывает событие или в нем происходит событие.', },
    { question: 'Разница между .stopPropagation() и .stopImmediatePropagation()?', answer: 'Эти два метода отменяют всплытие события но .stopPropagation() отменяет дальнейшее всплытие события но на текущем елементе все обработчики срабатывают, а .stopImmediatePropagation() останавливает бработку события на текущем елементе и всплытие события.', },
    { question: 'Разница между событиями load и DOMContentLoaded?', answer: 'Оба события отрабатывают когда страница загрузилась но DOMContentLoaded случаеться когда браузер полностью загрузил HTML и было построено DOM дерово, а load случаеться когда были загружены еще и стили и шрифты скрипты.', },
    { question: 'Разница между синхронными и асинхронными функциями?', answer: 'Синхронные функции блокируют выполнение Js, а асинхронные нет. Синхронные функции выполняються последовательно строчка за стройчкой, а асинхронные нет.', },
  ] 
secondRepeat: { [5], "17.08.2022", }
firstRepeat: { [6], "18.08.2022", }
learn: { lesson : [7],
  "20.08.2022" : [
    { question: 'Что такое прогрессивный рендеринг?', answer: 'Это абстрактное название технологий которое используеться для ускорения отрисовки веб страници. Основная идия это как можно раньше показать пользователю контент и уменшить время загрузки. К технологиям прогресивного рендеринга можно отнести ленивую загрузку картинок и тому подобное.', }, 
    { question: 'Почему результат сравнения 2х объектов это false?', answer: 'Потому что они стравниваються по ссылкам.', }, 
    { question: 'Что такое прототипное наследование? Как создать объект без прототипа?', answer: 'Это механизм работы Js, у всех обьектов в Js есть свойство prototype которое являеться ссылкой на другой обьект, и есть мы попробуем вызвать какуюто функцию или обратиться к какомуто свойству обьекта и в этом обьекте не будет того что мы ищем тогда поиск продолжится в его прототипе и так далее. Чтобы сосздать обьект без прототипа можно вызвать Object.create(null).', }, 
    { question: 'Почему расширение нативных JavaScript-объектов это плохая практика?', answer: 'Потому что это существенная архитектурная ошибка если мы говорим про в контексте продуктовой разработки. И поевляеться риск получить конфликты.', }, 
    { question: 'Что такое NaN? Как определить, что значение равно NaN?', answer: 'NaN это ошибка в математических вычислениях расшифровуеться как `Not a Number`. Чтобы понять что значение NaN нужно применять метод isNaN().', }, 
    { question: 'Что такое ECMAScript? В чём отличие от JavaScript?', answer: 'ECMAScript это спецификация скриптовых языков тоесть свод правил которым должен соответсвовать язык чтобы считаться скриптовым. JavaScript это одна из реализаций спецификации ECMAScript.', }, 
    { question: 'Можно ли изменить значение определённое через const?', answer: Если значение скаляр то изменить нельзя. Есть значение ссылочного типа то можна менять значения сущности на которую ссылкаеться идентификатор но перезаписать новую сущность тоесть поменять ссылку на какойто другой обьект не получиться.', }, 
    { question: 'Что такое временная мёртвая зона (temporal dead zone)?', answer: 'Это механизм работы Js. Значит что идентификатор не будет доступен некоторое время пока выполнение скрипта не дойдет до обьвления этоого идентификатора.', }, 
    { question: 'Что такое AJAX?', answer: 'Asynchronous JavaScript and XML — асинхронный JavaScript и XML это не технология сама по себе, а термин, который описывает «новый» подход к использованию существующих технологий вместе. HTML или XHTML, CSS, JavaScript, DOM, XML, XSLT, и объект XMLHttpRequest. Когда эти технологии объединяются в модель AJAX, web-приложения способны делать быстрые дополняющие обновления интерфейса пользователя без необходимости полной перезагрузки страницы браузером. Приложения работают быстрее и становятся более отзывчивыми к действиям пользователей.', }, 
  ],
  "21.08.2022" : [
    { question: 'Что такое same-origin policy в контексте JavaScript?', answer: 'same-origin policy определяет как документ или скрипт загруженый из одного источника может взаимодействовать с ресурсом из другого источника. Другими словами этот приницип запрещаеть делать запросы Js за граници домена. Простыми словами это значит что веб приложение может запрашивать ресурсы только с того домена с которого оно были загружено. Чтобы разрешить подобные запросы можно использовать cors.', }, 
    { question: 'Разница между attribute и property у DOM-элементов?', answer: 'attribute это статичное значение которое не изменяемо и может быть добавлено в HTML разметки, а property вычисляеться по ходу виполнения Пример: У нас есть инпут с атрибутом type=`text` и свойством value.', }, 
    { question: 'Разница между HTMLCollection и NodeList?', answer: 'HTMLCollection это динамическая HTML колекция которая представляеть собой масивободобные итерируемый обьект дочерних елементов. NodeList этот статический список узлов в которой входят все найденные в документе елементы. getElementsByClassName возвращает живую колекцию querySelectorAll возвращает статический NodeList.', }, 
  ] 
}
secondRepeat: { [6], "21.08.2022", }
firstRepeat: { [7], "22.08.2022", }
learn: { lesson: [8],
  "22.08.2022" : [
    { question: 'Что такое объектная обертка (Wrapper Objects)?', answer: 'Это то что создаеться во время выполнения скрипта для того мы могли применять методы скаляров. Например есть строка и к ней мы применяем .toUpperCase() и строка это же скаляр у нее нету метода, по этому вовремя выполнения создаеться обьктная обертка и которая реализуеть этот метод.', }, 
    { question: 'Как в JavaScript создать объект?', answer: 'С помошью литеральной нотации. С помошью функции конструктора. С помошью метода Object.create().', }, 
    { question: 'Для чего используется ключевое слово «new»?', answer: 'Для того чтобы создать екземпляр класса, оператор new делает следующие: создает пустой обьект, привязывает к созданному обьекту this, устонавливает прототип который ссылаеться на класс, возвращает this.', }, 
    { question: 'Разница между Rest и Spread операторами?', answer: 'Оператор троеточие который по своему работает, смотря как его применять, Spread расширяет структуру данных в отдельные елементы, а Rest преназначен для соединения елементов в массив.', }, 
    { question: 'Что такое деструктуризация?', answer: 'Это синтаксическая конструкция которая позволяет выковырять нужные нам данные из масива или обьекта и создать для них идентификаторы.', }, 
  ]
  "23.08.2022" : [  
    { question: 'Что такое цикл событий (event loop) и как он работает?', answer: '', }, 
    { question: 'Что такое CORS?', answer: 'Cross-Origin Resource Sharing механизм который использует дополнительные HTTP зоголовки чтобы дать возможность браузеру пользователя получать доступ к ресурсам сервера и домена который отличаеться от того что сайт использует в данный момент.', }, 
    { question: 'Что такое HTTP?', answer: 'HyperText Transfer Protocol это протокол для передачи гипертекстових документов по сети, в актуальное время используеться для передачи произвольных данных. Создан он для связи с браузерами и серверами но в настоящее время может использоваться для других целей. Повторяет склассическую клиент серверную модель когда клиент открывает соединение для создания запроса а затем ждет ответа.', }, 
    { question: 'Из чего состоит HTTP-запрос?', answer: 'HTTP-запрос состоит из метода, путя к ресурсу, версии протокола, заголовков, и иногда тела в котором находятся какието данные.', }, 
    { question: 'Основные принципы ООП?', answer: '', }, 
    { question: 'Что такое SOLID?', answer: '', }, 
    { question: 'Что такое Babel? Для чего он используется?', answer: 'Babel это транспайлер который переписывает код современного Js на код более поздних версий Js', }, 
  ]
}
secondRepeat: { [7], "24.08.2022", }
firstRepeat: { [8], "26.08.2022", }
learn: { lesson: [9],
  "26.08.2022" : [
    { question: 'Для чего используется оператор «!!» (двойного отрицания)?', answer: 'Для приведения занчения к булевому типу данных.', }, 
    { question: 'Как проверить, является ли значение массивом?', answer: 'Array.isArray()', }, 
    { question: 'Для чего используется оператор «%» (остатка)?', answer: 'Для того чтобы понять есть ли остаток после деление, а эта информация может быть полезная в обсолютно разной логике.', }, 
    { question: 'Для чего используется цикл «for…of»?', answer: 'Для итерации по миссивам. Он работает не с индектом а со значением.', }, 
    { question: 'Что такое шаблонные литералы (Template Literals)?', answer: 'Это синтаксическая конструкция которая позволяет нам в сроку впихивать переменные еще это назвают обратными скобками `` это намного удобней чем конкатенировать строку.', }, 
    { question: 'Какие методы может иметь HTTP-запрос?', answer: 'Их всего 9, и чаще всего я использовал такие методы как GET POST PATCH PUT DELETE.', }, 
    { question: 'Что такое статический метод класса (static)? Как осуществляется его вызов?', answer: 'Это те методы которые доступны классу но не доступные экземпляру класса. И вызывать их нужно через обращение к классу. Например: Array.isArray().', }, 
  ]
  "28.08.2022": [
    { question: 'Как работает boxing/unboxing в JavaScript?', answer: 'Термины упаков и распаковка пришли в Js из дргуих языков программирования и на практике данные механизм тесно связан с обьектом оберткой тоесть если у примитива ми вызываем метод нас примитив обворачиваеться в обьект у которого есть этот метод, метод отрабатывает возвращаеться значение после обьект умирает. Такое обворачивание может быть нативным когда оно идет под капотом, а может быть явным когда мы самостоятельно обворачиваем примитив в конструктор. Что касаеться упаковки я толко что все сказал, что касаеться распоковки это процес приобразование ссылочных типов в примитивы, для этого можно использовать методы .valueOf() и .toString().', }, 
    { question: 'Что такое Set, Map, WeakMap и WeakSet?', answer: 'Это особенные колекции в Js, Map подобен обьекту у него тоже есть ключ знанчение, но ключом Map может быть любой тип данный наприме другой обьект или даже булеан знанчение. Set больше похож на массив но с тем условием что каждое знанчение в Set может встречаться только один раз. WeakMap и WeakSet в свою очерель тоже самое но они не препятствуют сборщику мосора удалять свои елементы тоесть если некий елемент присутсвуеть только в WeakMap и WeakSet он спокойно будет удялен сборщиком мусора.', }, 
    { question: 'Что такое промисы (Promises)?', answer: 'Промис это класс который используеться для работы обычно с исинхронными операциями. Когда визиваеться new Promice в него передаеться функция которая имеет два аргумента это колбеки. Кроме этого при создании екземпляра класса возвращаеться обьект с двумя полями это status и result. Когда фуенкия отработала можно будет вызвать один из колбеков который поменяеть status промиса и установит в result то значение которое ми передали в каллбеке. По поводу колбеков первый это resolve он значит что все пошло хорошо и мы получили значение, когда он вызываеться status промиса меняеться на fulfilled тоесть виполненый, А второй колбек reject меняеть status на rejected.', }, 
    { question: 'Что такое HTTP cookie? Для чего они используются?', answer: 'HTTP это протокол без сохрарнения состояния тоесть каждая пара запрос-ответ не связана с предыдущией парой запрос-ответ на реальных проетках это не очень удобно по этому создали cookie для хранения некоторой информации например данные для аунтификации или хранить даннфе карзины пользователя. HTTP cookie это небольшой фрагмент данных который сервер отправляеть в браузер клиента который тот может сохранить и отсылать обратно с каждым запросом на сервер. Для них можно создать срок действия после которых они будут перезапрошоны.', }, 
    { question: 'Разница между feature detection, feature inference и анализом строки user-agent?', answer: 'Все три подходя предназначены для определения браузерных возможностей пользователя. Например ели у нас есть какойто блок кода и браузер клиента не может выполнить этот код то будет выполнен полифил и тому подобное.', }, 
    { question: 'Что такое Веб-компоненты и какие технологии в них используются?', answer: 'Веб-компоненты это технологий которая позволяеть создавать многократно используемые компоненты в веб документах и приложениях они поддерживаються браузерами напрямую и не требуют дополнительных библиотек для использования. Веб-компоненты включают в себя 4 технолигогии каждая из которых может быть использована отдельно и дргуих "кастомные события" "HTML шаблоны" "теневой дом" "HTML импорт".', }, 
  ]
}
secondRepeat: { [8], "29.08.2022", }
firstRepeat: { [9], "30.08.2022", }
learn: { lesson: [10],
  "01.09.2022" : [
    { question: 'Что такое мемоизация? Реализуйте базовую логику функции для мемоизации?', answer: 'Мемоизация это подход к написанию специальных функция которые запоминают прошлые результаты вычислений, он необходим в реализации если наша функция делает какието очень долгие вычисления, и может создаться ситуация что их нужно будет повторить.', },
    { question: 'Разница между оператором "in" и методом "hasOwnProperty"?', answer: 'Оба эти метода ищут поле в обьекте но разница в том что hasOwnProperty ищет поле конкретно в том обьекте к которому пориминяеться этот метод, а оператор in ищет еще и по прототипам.', },
    { question: 'Разница между глубокой (deep) и поверхностной (shallow) копиями объекта? Как сделать каждую из них?', answer: 'Разница в том что если мы делаем поверхностную копию обьекта то ссылочные структуры данные по сути не копиркються а передаються по ссылке в новый обьект, при глубоком копировании создаються совершенно новые ссылочные структуры и локуруються в памяти. Чтобы сделать глубокую копию обьекта в Js есть JSON.parse(JSON.stringify(value)), я для поверхностной копии можно использовать Object.assign(value) или спред оператор.', },
    { question: 'Что такое цепочка вызовов функций (chaining)? Как реализовать такой подход?', answer: 'Это когда методы обьекта вызываються один за другим без обращения к исходному идентификатору в реализации Js это некоторые методы строк и массивов или например в промисах это методы then catch. Реализовать это можно с помошью возвращения контекста.', },
    { question: 'Что такое необъявленная переменная?', answer: 'Необъявленная переменная создаеться когда какоето занчение присваеваеться идентификатору без использование ключивых слов var let const. у них глобальная область видимости и их использование считаеться плохой практикой. Также если скрипт запущен с `use strict` то создание таких переменные приведеть к ошибке.', },
    { question: 'Как передаются параметры в функцию: по ссылке или по значению?', answer: 'Параметры в функцию передаються всегда по значения, а со скалярами все просто, они копируються, а если мы передаем ссылочный тип данных то в функцию передаеться ссылка на эту сущность и ели мы изменим поле это сущности то оно измениться и в памяти устройства, а если попытаемся переприсвоить в идентификатор функции нновую ссылочную сущность то это никак не повлияет на ту сущность ссылку которой функция получила в самом начале.', },
    { question: 'Разница между обычными функциями и стрелочными?', answer: 'У стрелочных функций отсутсвуеть прототип и также this будет становится undefined или браться из внешнего контекста. А обычные функции подвержены всплытию и также this в них всегда динамичный и его можно изменять.', },
    { question: 'Разница между методом Object.freeze() и const?', answer: 'Object.freeze() принимаеть в себя обьект и возвращает новый обьект который бодобен старому но отличаеться лишь тем что его поля нельзя изменять, добавлять новые или удалять старые. Ключевое слово const создает идентификатор в который хранит ссылку на ячейки оперативной памяти которые хранят какоето знанчени причем в этот идентификатор нельзя присваивать какоето другое значение.', },
    { question: 'Что такое генераторы? Когда стоит использовать генераторы?', answer: 'Генераторы это особые функции которые Обозначаються со звездочкой после чего в них становиться доступным ключевое слово yield. Они всегда возвращают итерируемый обьект у которого есть метод next, при каждом вызове этого метода вычисляеться новое значение которое находиться справа от каждого yeild, и этот метод можно вызывать пока yield в генераторе не закончиться.', },
    { question: 'Как динамически добавить элемент на HTML страницу?', answer: 'Element.append(), Node.appendChild(), Element.innerHTML = `` Node.insertBefore()', },
    { question: 'Разница между cookie, sessionStorage и localStorage?', answer: 'cookie это какойто кусочек данных который может быть установлен сервером и отправляться с каждым HTTP запросом они нужны для того чтобы добавить HTTP протоколу состояние которого у него нету. sessionStorage это какойто кусочек данных который храниться в браузере и будет доступен до тех пор пока будет открыта вкладка. localStorage это кусочек данных который будет сохраняться не только после закрытия браузера но и даже после перезагрузки компьютера.', },
    { question: 'Способы уменьшения времени загрузки веб-страницы?', answer: 'Минификация файлом. Сжатие изображений. Использование CDN. Использование кеширования.', },
  ]
}
secondRepeat: { [9], "07.09.2022", }
firstRepeat: { [10], "07.09.2022", }
learn: { lesson: [11],
  "08.09.2022" : [
    { question: 'Почему хорошей практикой считается располагать link для подключения CSS стилей внутри тэга head, а script JS перед закрывающимся тэгом body?', answer: 'Необходимость помещать link в шапке сайта, описана в спецификации, парсинг HTML документа идет слева направо, сверху в низ а построение DOM и его стилизация это процесы которые идут парательно, по этому стили прописываються в теге head чтобы как можно раньше запросить их для стилизации страници. А размещение script в конце страници нужно потому что пока указанный скрипт не выполниться парсинг HTML не продолжить и если выполнить скрипт до того момента пока не будет готов DOM то мы можем поймать ошибку если в скрипте есть чтото что обращаеться к DOM елементам которых нету.', },
    { question: 'Основные этапы проверок валидности HTML документа?', answer: 'Валидация DTD любой HTML документ должен содержать доктайп чтобы браузер или валидатор могли понять какая версия стандарта используеться. Валидация синтаксиса, на основе DTD валидации проверяеться происходит анализ синтаксиса на используемие теги. Проверка корректной вложенности. Проверка на посторенние елементы в документе.', },
    { question: 'Типы узлов DOM-дерева?', answer: 'Их всего 12 но чаще всего приходиться работать с 4 из них. Это документ, елемент, текст, и комментарий. Чтобы узнать акого типа текущий елемент можно обрптиться к свойству .nodeType', },
    { question: 'Свойства для перемещения по DOM-дереву?', answer: 'Они деляться на двати типа, те что работают с елементами и те что работают с узлами, те что работают с елементами .children .lastElementChild .firstElementChild .parentElement .previousElementSibling .nextElementSibling. А те что работают с узлами имеют примерно одинаковые названия но без слова element.', },
    { question: 'Виды событий в JavaScript?', answer: 'Основные это события мыши и клавиатуры. Есть еще события касания события печати в общем их очень много.', },
    { question: 'Как добавить обработчик события на DOM-элемент?', answer: 'С помошью метода .addEventListener', },
    { question: 'Как удалить обработчик события с DOM-элемента?', answer: 'С помошью метода .removeEventListener', },
    { question: 'Сколько аргументов принимает addEventListener?', answer: '3, два обязательных и один опциональный, первый это тип события, второй это функция кол бек, третий это обьект настроек.', },
    { question: 'Что такое React?', answer: 'Реакт это библиотека которая разработана компанией фейсфук с открытым исходным кодом которая предназначена для создания пользовательских интерфейсов, имеет коммпонентный подход и вносить декларативность в создания приложения это когда мы описываем какой интерфей будет у нашей программи в зависимости от состояния приложения.', },
    { question: 'Перечислите особенности React?', answer: 'Virtual DOM, пропсы, состояние, Jsx', },
    { question: 'Что такое Virtual DOM? Как он работает с React?', answer: 'Главная проблема DOM это то что он никогда не был расчитан для создания динамического пользовательского интерфейса даже на маленьких страницах распологаеться тысячи дом узлов и по этому чтото искать в нем или вставлять новые елменты всегда требует времени. И реакт предложил Virtual DOM который являеться легковесной копией браузерного DOM по этому если если происходять какието изминение данных реакт сначала сравнивает это со старыми данными и если необходимо перерисовать UI то перерисовуеться именно та чать UI которую затрагивают изменения.', },
  ]
}
secondRepeat: { [10], "09.09.2022", }
firstRepeat: { [11], "10.09.2022", }
learn: { lesson: [12],
  "10.09.2022" : [
    { question: 'Если представить HTML5 как открытую веб-платформу, из каких блоков он состоит?', answer: 'Семантика, Стилизация, Доступ к устройствам, Связанность, Офлайн Хранилище, Мультимедиа, 2D/3D Графика, Производительность и интеграция.', },
    { question: 'Что такое Flash Of Unstyled Content? Как его избежать?', answer: 'Вставкой критичного CSS. Это набор минисального CSS который требуеться для рендеринга первого экрана страници. Второй варик показ прелоудера до полной загрузки.', },
    { question: 'Разница между layout, painting и compositing?', answer: 'Все 3 этапа относяться к отрисовке страници layout это процес расчета места для элемента на основе CSS правил. painting это рисование пикселе для отрисовки визуальных елементов. compositing это отрисовка слоев в определенном порядке.', },
    { question: 'Что такое WebSocket? В чем принцип его работы?', answer: 'Это протокол который обеспечиваеть возможность обмена данными между сервером и клиентом через постоянное соединение. Данные передпются по этому соединению в обоих направлениях без разрыва соединения и дополнительных HTTP запросов. Он работает по принципу событий клиент устанавливаеть соединение и подписываеться на события прослушивая их. Eсть 4 основных события это open message error close.', },
  ],
  "11.09.2022": [ 
    { question: 'Что такое прототип объекта в JavaScript?', answer: 'Это ссылка на обьект который может иметь свойства и методы. Если при обращение к первому обьекту свойство или метод не найден тогда они будут искаться в его прототипе это называеться прототипное наследование. Чтобы установить прототип обьекта можно использовать свойство __proto__ которое присутствуэт в каждом обьекте.', },
    { question: 'Плюсы и минусы использовании Ajax?', answer: 'Плюсы: Повышение интерактивности, Сокращение количества обращений к серверу, Хранения состояния страници. Минусы: Сложность реализации закладки страници, Не работает без JS, Динамический контен не виден роботам.', },
    { question: 'Подходы при работе с асинхронным кодом?', answer: 'Промисы, async/await, колбеки', },
    { question: 'Преимущества использовании промисов вместо колбэков?', answer: 'Исключает возможность создания Callback Hel. Упрощает написание последовательного кода для обработки значения, методом then и отлавлевание ошибок методом catch. Упрощает написание паралельного кода Promise.all(). Можно избежать проблемы когда колбек вызываеться слишклм рано или слишком поздно.', },
    { question: 'Для чего нужен атрибут key при рендере списков?', answer: 'Он нужен для того чтобы реакт понимал какой именно елемент перерисовывать если данные изменяться.', },
    { question: 'Что такое PureComponent?', answer: 'Компонент которые реализуеть shouldComponentUpdate() при поверхностном сравнении пропсов или состояний, используеться для оптимизации и хорошо себя показывает кода пропсы или состояния имеют простую структуру.', },
    { question: 'Что такое Компонент высшего порядка (Higher-Order Component / HOC)?', answer: 'Это компонент который принимает в себя другой компонент или возвращает новый компонент. (как и функция высшего порядка).', },
    { question: 'Разница между управляемыми (controlled) и не управляемыми (uncontrolled) компонентами?', answer: 'Разница в том что реакт не знает что происходит (uncontrolled) компонентами, обычно это input textarea или select потому что у них свое состояние от дефолтного HTML. (controlled) - это когда реакт все знает о состоянии компонента.', },
  ]
}
secondRepeat: { [11], "12.09.2022", }
firstRepeat: { [12], "13.09.2022", }
learn: { lesson: [13],
  "13.09.2022" : [
    { question: 'Методы жизненного цикла компонента в React?', answer: 'componentDidMount, componentWillUnmount componentDidUpdate shouldComponentUpdate getDerivedStateFromProps constructor render getSnapshotBeforeUpdate componentDidCatch', },
    { question: 'Стадии жизненного цикла компонента в React?', answer: 'mounting updating unmounting', },
    { question: 'Что такое React Reconciliation?', answer: 'Согласование процесс когда реакт сверяет старое и новое Virtual DOM и решает, нужно ли ему перерисовывать обычный DOM.', },
    { question: 'Что такое портал (Portal)?', answer: 'Это компонент который рендерит свое содержимое в произвольную часть дом дерева.', },
    { question: 'Что такое контекст (Context)?', answer: 'Context это способ передачи данный через дерево компонентов без явной передачи свойства вручную в каждом компоненте.', },
    { question: 'Что такое React хуки (Hooks)?', answer: 'Это функции каоторые добовлять недостоющий функционал, функциональным компонентам. И уберают необходимость уиспользовать классовые компоненты что повышает производительность потому что у функциональных компонентоы нету методов жизненного цикла.', },
    { question: 'Что Такое JSX?', answer: 'Это зависимость которая используеться в реакт приложениях и она внедряет необработанный HTML шаблон внутырь JS кода. Расшифровуеться как Java Script XML', },
    { question: 'Разница между состоянием и пропсами?', answer: 'Пропсы приходя в компонент из вне, и несут в себе суть что это какаято информация которую компонент использует, а состояние это какието данные которые находяться в компоненте и могут быть изменины в ходя работы программы.', },
    { question: 'Что такое React Fiber?', answer: 'Движок согласования реакта.', },
    { question: 'Что такое фрагмент (Fragment)? Почему фрагмент лучше, чем div?', answer: 'Реакт фрагмент это синтаксис для создания елемента который не рождает DOW узлов.', },
    { question: 'Что такое Flux?', answer: 'Это архитектурный подход или набор шаблонов программирования для построения пользовательских интерфейса веб приложения и построенный на однонаправленных потоках данных.', },
    { question: 'Что такое Redux? Ключевые принципы Redux?', answer: 'Это библиотека которая являеться стейт менеджментом И хранит состояние всего приложения которое можно будет стабильно и очевидно изменять. Ключивые принципы Redux это чистые цункции и один источник правды, состояние доступно только для чтения.', },
  ]
}
secondRepeat: { [12], "15.09.2022", }
firstRepeat: { [13], "15.09.2022", }
learn: { lesson: [14],
  "" : [
    { question: 'Что такое синтетические события в React (SyntheticEvent)?', answer: '', },
    { question: 'Что такое React-ссылка (Ref)? Как создать ссылку?', answer: '', },
    { question: 'Разница между теневым (Shadow) и виртуальным (Virtual) DOM?', answer: '', },
    { question: 'Назовите преимущества использования React?', answer: '', },
    { question: 'Что такое условный рендеринг (Conditional Rendering)? Как его выполнить?', answer: '', },
    { question: 'Что такое компонент-переключатель (Switching Component)?', answer: '', },
    { question: 'Разница между React и ReactDOM?', answer: '', },
    { question: 'Разница между компонентом и контейнером?', answer: '', },
    { question: 'Как React обрабатывает, или ограничивает использование пропсов определенного типа?', answer: '', },
    { question: 'Что такое строгий режим в React? Его преимущества?', answer: '', },
    { question: 'Что такое «бурение пропсов» (Prop Drilling)? Как его избежать?', answer: '', },
    { question: 'Что такое «опрос» (Polling)? Как его реализовать в React?', answer: '', },
    { question: 'Разница между элементом и компонентом?', answer: '', },
    { question: 'Что такое ReactDOMServer?', answer: '', },
    { question: 'Разница между Redux и Flux?', answer: '', },
  ]
}

learn: { lesson: [],
  "" : [
    { question: '', answer: '', },
  ]
}
