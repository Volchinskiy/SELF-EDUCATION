// Place your key bindings in this file to override the defaultsauto[]
[
  // BASIS
  { "key": "up", "command": "cursorUp", "when": "textInputFocus" },
  { "key": "down", "command": "cursorDown", "when": "textInputFocus" },
  { "key": "left", "command": "cursorLeft", "when": "textInputFocus" },
  { "key": "right", "command": "cursorRight", "when": "textInputFocus" },

  { "key": "up", "command": "selectPrevSuggestion", "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
  { "key": "down", "command": "selectNextSuggestion", "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },

  { "key": "shift+up", "command": "cursorUpSelect", "when": "textInputFocus" },
  { "key": "shift+down", "command": "cursorDownSelect", "when": "textInputFocus" },
  { "key": "shift+left", "command": "cursorLeftSelect", "when": "textInputFocus" },
  { "key": "shift+right", "command": "cursorRightSelect", "when": "textInputFocus" },

  { "key": "ctrl+shift+up", "command": "cursorUpSelect", "when": "textInputFocus" },
  { "key": "ctrl+shift+down", "command": "cursorDownSelect", "when": "textInputFocus" },
  { "key": "ctrl+shift+left", "command": "cursorWordLeftSelect", "when": "textInputFocus && !accessibilityModeEnabled" },
  { "key": "ctrl+shift+right", "command": "cursorWordEndRightSelect", "when": "textInputFocus && !accessibilityModeEnabled" },

  { "key": "ctrl+z", "command": "undo" },
  { "key": "ctrl+pageup", "command": "workbench.action.previousEditor" },
  { "key": "ctrl+pagedown", "command": "workbench.action.nextEditor" },
  { "key": "ctrl+enter", "command": "editor.action.insertLineAfter", "when": "editorTextFocus && !editorReadonly" },
  { "key": "ctrl+shift+enter", "command": "editor.action.insertLineBefore", "when": "editorTextFocus && !editorReadonly" },

  // TERMINAL
  { "key": "ctrl+space ctrl+space", "command": "workbench.action.terminal.kill" },
  { "key": "win+`", "command": "macros.hideSideBarAndMaxTerminal", "when": "sideBarVisible" },
  { "key": "ctrl+win+`", "command": "workbench.action.toggleMaximizedPanel" },

  // OPEN GIT EXTENSION
  { "key": "ctrl+shift+g", "command": "workbench.view.scm", "when": "workbench.scm.active" },
  // CREATE FILE AND FOLDER HOT KEY
  { "key": "ctrl+shift+n", "command": "-workbench.action.newWindow" },
  { "key": "ctrl+shift+n", "command": "explorer.newFolder", "when": "explorerViewletFocus" },
  { "key": "ctrl+n", "command": "explorer.newFile", "when": "explorerViewletFocus" },

  // FOCUS EDITOR
  { "key": "ctrl+e", "command": "workbench.action.focusActiveEditorGroup", "when": "!focusActiveEditorGroup" },

  // HOT KEY SNIPPETS
  { "key": "alt+enter", "command": "editor.action.insertSnippet", "when": "editorTextFocus", "args": { "snippet": "console.log(${TM_SELECTED_TEXT}$1);" } },

  // NOTIFICATION
  { "key": "ctrl+shift+=", "command": "notifications.focusToasts" },

  // DELETE
  { "key": "ctrl+shift+w", "command": "-workbench.action.closeWindow" },
  { "key": "ctrl+n", "command": "-workbench.action.files.newUntitledFile" }
]
